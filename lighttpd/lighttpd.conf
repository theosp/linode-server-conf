# Debian lighttpd configuration file
#

############ Options you really have to take care of ####################

## modules to load
# mod_access, mod_accesslog and mod_alias are loaded by default
# all other module should only be loaded if neccesary
# - saves some time
# - saves memory

server.modules              = (
            "mod_access",
            "mod_alias",
            "mod_accesslog",
            "mod_compress",
            "mod_rewrite",
            "mod_redirect",
#           "mod_evhost",
#           "mod_usertrack",
#           "mod_rrdtool",
#           "mod_webdav",
#           "mod_expire",
#           "mod_flv_streaming",
#           "mod_evasive"
)

## a static document-root, for virtual-hosting take look at the
## server.virtual-* options
server.document-root       = "/var/www/"

## where to upload files to, purged daily.
server.upload-dirs = ( "/var/cache/lighttpd/uploads" )

## where to send error-messages to
server.errorlog            = "/var/log/lighttpd/error.log"

## files to check for if .../ is requested
index-file.names           = ( "index.php", "index.html",
                               "index.htm", "default.htm",
                               "index.lighttpd.html" )


## Use the "Content-Type" extended attribute to obtain mime type if possible
# mimetype.use-xattr = "enable"

#### accesslog module
accesslog.filename         = "/var/log/lighttpd/access.log"

## deny access the file-extensions
#
# ~    is for backupfiles from vi, emacs, joe, ...
# .inc is often used for code includes which should in general not be part
#      of the document-root
url.access-deny            = ( "~", ".inc" )

##
# which extensions should not be handle via static-file transfer
#
# .php, .pl, .fcgi are most often handled by mod_fastcgi or mod_cgi
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )


######### Options that are good to be but not neccesary to be changed #######

## Use ipv6 only if available. (disabled for while, check #560837)
#include_shell "/usr/share/lighttpd/use-ipv6.pl"

## bind to port (default: 80)
server.port               = 81

## bind to localhost only (default: all interfaces)
## server.bind                = "localhost"

## error-handler for status 404
#server.error-handler-404  = "/error-handler.html"
#server.error-handler-404  = "/error-handler.php"

## to help the rc.scripts
server.pid-file            = "/var/run/lighttpd.pid"

##
## Format: <errorfile-prefix><status>.html
## -> ..../status-404.html for 'File not found'
#server.errorfile-prefix    = "/var/www/"

## virtual directory listings
dir-listing.encoding        = "utf-8"
server.dir-listing          = "enable"

## send unhandled HTTP-header headers to error-log
#debug.dump-unknown-headers  = "enable"

### only root can use these options
#
# chroot() to directory (default: no chroot() )
#server.chroot            = "/"

## change uid to <uid> (default: don't care)
server.username            = "www-data"

## change uid to <uid> (default: don't care)
server.groupname           = "www-data"

#### compress module
compress.cache-dir          = "/var/cache/lighttpd/compress/"
compress.filetype           = ("text/plain", "text/html", "application/x-javascript", "text/css")


#### url handling modules (rewrite, redirect, access)
# url.rewrite                 = ( "^/$"             => "/server-status" )
# url.redirect                = ( "^/wishlist/(.+)" => "http://www.123.org/$1" )

#
# define a pattern for the host url finding
# %% => % sign
# %0 => domain name + tld
# %1 => tld
# %2 => domain name without tld
# %3 => subdomain 1 name
# %4 => subdomain 2 name
#
# evhost.path-pattern = "/home/storage/dev/www/%3/htdocs/"

#### expire module
# expire.url                  = ( "/buggy/" => "access 2 hours", "/asdhas/" => "access plus 1 seconds 2 minutes")

#### rrdtool
# rrdtool.binary = "/usr/bin/rrdtool"
# rrdtool.db-name = "/var/www/lighttpd.rrd"

#### external configuration files
## mimetype mapping
include_shell "/usr/share/lighttpd/create-mime.assign.pl"

## load enabled configuration files,
## read /etc/lighttpd/conf-available/README first
include_shell "/usr/share/lighttpd/include-conf-enabled.pl"

$SERVER["socket"] == "109.74.199.208:80" {
    $HTTP["host"] =~ "^(www.)?blogy.me" {
        url.redirect-code = 302 # will work only for lighttpd > 1.5
        url.redirect = ( ".*" => "http://careers.stackoverflow.com/1" )
    }
    else $HTTP["host"] =~ "^(www.)?theosp.me" {
        server.name = "www.theosp.me"

        # Allow access to all
        url.access-deny = ()

        server.document-root += "theosp_me/en/"

        #  make sure those are always served through FastCGI and never as
        #  static files
        static-file.exclude-extensions = ( ".php" )

        url.rewrite-final = (

            # Exclude some directories from rewriting
            "^/(wp-admin|wp-includes|wp-content)/(.*)" => "$0",

            # Exclude .php files at root from rewriting
            "^/(.*.php).*" => "$0",

            # Handle permalinks and feeds
            "^/(.*)$" => "/index.php/$1"
        )
    }
    else $HTTP["host"] =~ "^(www.)?gefen.me" {
        server.name = "www.gefen.me"

        # Allow access to all
        url.access-deny = ()

        server.document-root += "gefen/"

        #  make sure those are always served through FastCGI and never as
        #  static files
        static-file.exclude-extensions = ( ".php" )

        url.rewrite-final = (

            # Exclude some directories from rewriting
            "^/(wp-admin|wp-includes|wp-content|gallery2)/(.*)" => "$0",

            # Exclude .php files at root from rewriting
            "^/(.*.php).*" => "$0",

            # Handle permalinks and feeds
            "^/(.*)$" => "/index.php/$1"
        )
    }
    else $HTTP["host"] == "my.blogy.me" {
        url.redirect-code = 301 # will work only for lighttpd > 1.5
        url.redirect = ( ".*" => "https://my.blogy.me/" )
    }
    else $HTTP["host"] == "think-wiki.blogy.me" {
        url.redirect-code = 301 # will work only for lighttpd > 1.5
        url.redirect = ( ".*" => "https://think-wiki.blogy.me/" )
    }
    else $HTTP["host"] == "lobservers.com" {
        url.redirect-code = 301 # will work only for lighttpd > 1.5
        url.redirect = ( ".*" => "http://www.lobservers.com/" )
    }
    else $HTTP["host"] == "www.lobservers.com" {
        server.name = "www.lobservers.com"

        fastcgi.server = (
            "/mysite.fcgi" => (
                "main" => (
                    # Use host / port instead of socket for TCP fastcgi
                    "host" => "127.0.0.1",
                    "port" => 3033,
                    #"socket" => "/home/user/mysite.sock",
                    "check-local" => "disable",
                )
            ),
        )

        alias.url = (
            "/media" => "/var/www/lobservers/media/",
            "/admin-media" => "/var/www/lobservers/media/admin/",
        )

        url.rewrite-once = (
            "^(/media.*)$" => "$1",
            "^(/admin-media.*)$" => "$1",
            #"^/favicon\.ico$" => "/media/favicon.ico",
            "^(/.*)$" => "/mysite.fcgi$1",
        )
    }
}
$SERVER["socket"] == "109.74.199.208:443" {
    # Enable the ssl
    ssl.engine = "enable"
    # A default pemfile for the socket is required
    ssl.pemfile = "/etc/lighttpd/ssl/default/server.pem"

    # First deny access to all
    url.access-deny = ("")

    $HTTP["host"] == "my.blogy.me" {
        server.name = "my.blogy.me"
        ssl.pemfile = "/etc/lighttpd/ssl/my.blogy.me/server.pem"

        # Allow access to all
        url.access-deny = ()

        server.document-root += "blogy-wiki/"

        #  make sure those are always served through FastCGI and never as
        #  static files
        static-file.exclude-extensions = ( ".php" )

        # deny access completly to these (.htaccess, and some folders)
        $HTTP["url"] =~ "^/(\.|_)ht|^/(bin|data|inc|conf)/" {
            url.access-deny = ( "" )
        }

        url.rewrite = (
          "^/lib/.*$"              => "$0",
          "^/_media/(.*)?\?(.*)$"  => "/lib/exe/fetch.php?media=$1&$2",
          "^/_media/(.*)$"         => "/lib/exe/fetch.php?media=$1",
          "^/_detail/(.*)?\?(.*)$" => "/lib/exe/detail.php?media=$1&$2",
          "^/_detail/(.*)?$"       => "/lib/exe/detail.php?media=$1",
          "^/_export/([^/]+)/(.*)\?(.*)$" => "/doku.php?do=export_$1&id=$2&$3",
          "^/_export/([^/]+)/(.*)" =>  "/doku.php?do=export_$1&id=$2",
          "^/doku.php.*"           => "$0",
          "^/feed.php.*"           => "$0",
          "^/(.*)\?(.*)"           =>  "/doku.php?id=$1&$2",
          "^/(.*)"                 =>  "/doku.php?id=$1"
        )
    }
    else $HTTP["host"] == "think-wiki.blogy.me" {
        server.name = "think-wiki.blogy.me"
        ssl.pemfile = "/etc/lighttpd/ssl/think-wiki.blogy.me/server.pem"

        # Allow access to all
        url.access-deny = ()

        server.document-root += "think-wiki/"

        #  make sure those are always served through FastCGI and never as
        #  static files
        static-file.exclude-extensions = ( ".php" )

        # deny access completly to these (.htaccess, and some folders)
        $HTTP["url"] =~ "^/(\.|_)ht|^/(bin|data|inc|conf)/" {
            url.access-deny = ( "" )
        }

        url.rewrite = (
          "^/lib/.*$"              => "$0",
          "^/_media/(.*)?\?(.*)$"  => "/lib/exe/fetch.php?media=$1&$2",
          "^/_media/(.*)$"         => "/lib/exe/fetch.php?media=$1",
          "^/_detail/(.*)?\?(.*)$" => "/lib/exe/detail.php?media=$1&$2",
          "^/_detail/(.*)?$"       => "/lib/exe/detail.php?media=$1",
          "^/_export/([^/]+)/(.*)\?(.*)$" => "/doku.php?do=export_$1&id=$2&$3",
          "^/_export/([^/]+)/(.*)" =>  "/doku.php?do=export_$1&id=$2",
          "^/doku.php.*"           => "$0",
          "^/feed.php.*"           => "$0",
          "^/(.*)\?(.*)"           =>  "/doku.php?id=$1&$2",
          "^/(.*)"                 =>  "/doku.php?id=$1"
        )
    }
    else $HTTP["host"] =~ "blogy.me" {
        server.name = "blogy.me"
        ssl.pemfile = "/etc/lighttpd/ssl/blogy.me/server.pem"

        # Allow access to all
        url.access-deny = ()

        server.document-root += "blogy-default/"

        #  make sure those are always served through FastCGI and never as
        #  static files
        static-file.exclude-extensions = ( ".php" )
    }
}
